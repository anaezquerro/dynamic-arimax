{
    "type": [
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        3,
        2,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        2,
        3,
        2,
        3,
        3,
        3,
        3,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2
    ],
    "data": [
        "+ ",
        ")",
        "Error: unexpected ')' in:\n\"ics:results\n)\"\n",
        "> ",
        "        for (covar in c('X1', 'X2', 'X3')) {",
        "+ ",
        "            if (check_covariate(covar)) {",
        "+ ",
        "                # update TP values",
        "+ ",
        "                ics_results[[ic]][['TP']] <- ics_results[[ic]][['TP']] + 1",
        "+ ",
        "                stmethods_results[[statmet]][['TP']] <- stmethods_results[[statmet]][['TP']] + 1",
        "+ ",
        "                ",
        "+ ",
        "                # update lag right values",
        "+ ",
        "                ics_results[[ic]][['lag_right']] <- ics_results[[ic]][['lag_right']] + check_lag(covar, lags[[covar]]) ",
        "+ ",
        "                stmethods_results[[statmet]][['lag_right']] <- stmethods_results[[statmet]][['lag_right']] + check_lag(covar, lags[[covar]]) ",
        "+ ",
        "                ",
        "+ ",
        "                cat(paste0('Covariate ', covar, ' was added to the model\\n'))",
        "+ ",
        "            } else {",
        "+ ",
        "                ics_results[[ic]][['FN']] <- ics_results[[ic]][['FN']] + 1",
        "+ ",
        "                stmethods_results[[statmet]][['FN']] <- stmethods_results[[statmet]][['FN']] + 1",
        "+ ",
        "                cat(paste0('Covariate ', covar, ' was not added to the model\\n'))",
        "+ ",
        "            }",
        "+ ",
        "        }",
        "Covariate X1 was added to the model\nCovariate X2 was added to the model\nCovariate X3 was added to the model\n",
        "> ",
        "ics_results",
        "$aic\n$aic$TP\n[1] 3\n\n$aic$TN\n[1] 0\n\n$aic$FP\n[1] 0\n\n$aic$FN\n[1] 0\n\n$aic$lag_right\n[1] 1\n\n\n$bic\n$bic$TP\n[1] 0\n\n$bic$TN\n[1] 0\n\n$bic$FP\n[1] 0\n\n$bic$FN\n[1] 0\n\n$bic$lag_right\n[1] 0\n\n\n$aicc\n$aicc$TP\n[1] 0\n\n$aicc$TN\n[1] 0\n\n$aicc$FP\n[1] 0\n\n$aicc$FN\n[1] 0\n\n$aicc$lag_right\n[1] 0\n\n\n",
        "> ",
        "source(\"~/dynamic-arimax/simulations.R\", echo=TRUE)",
        "\n> eval(parse(\"plot_tools.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"arima_simulation.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"auto_fitting.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"auto_selection.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"forecasting.R\", encoding=\"UTF-8\"))\n\n> # Librerías de series temporales\n> library(fpp2)\n\n> library(tseries)\n\n> library(TSA)\n\n> library(seastests)\n\n> library(forecast)\n\n> # Librerías para los gráficos\n> library(plotly)\n\n> library(forecast)\n\n> # Auxiliares\n> library(prettydoc)\n\n> library(stringi)",
        "\n\n> library(stringr)\n\n> library(polynom)\n\n> library(parallel)\n\n> ics <- c('aicc')\n\n> n <- 5000\n\n> stationary_methods <- c('auto.arima', 'adf.test')\n\n> generate_orders <- function() {\n+     p <- sample(0:3, size=1, prob=c(0.3, 0.3, 0.2, 0.1))\n+     q <- sample(0:3, size=1, prob=c(0.3, 0.3, 0.2, 0.1) .... [TRUNCATED] \n\n> generate_coefficients <- function() {\n+     sign <- ifelse(runif(4)>0.3, 1, -1)\n+     betas <- sign*rnorm(4, 2, 0.5) \n+     betas[1] <- rnorm(1, 0,  .... [TRUNCATED] \n\n> generate_lags <- function() {\n+     lags <- sample(0:6, size=3, prob=c(0.3, 0.25, 0.25, 0.1, 0.05, 0.025, 0.025))\n+     return(lags)\n+ }",
        "\n\n> check_covariate <- function(covariate) {\n+     if (ncol(ajuste$xreg) == 1) {\n+         return(covariate %in% ajuste$history$var)\n+     } else {\n+    .... [TRUNCATED] \n\n> check_lag <- function(covariate, correct_lag) {\n+     return(as.numeric(\n+         correct_lag == as.numeric(ajuste$history$lag[ajuste$history$var = .... [TRUNCATED] \n\n> TP <- 0\n\n> TN <- 0\n\n> FP <- 0\n\n> FN <- 0\n\n> lag_right <- 0\n\n> ics <- c('aic', 'bic', 'aicc')\n\n> stationary_methods <- c('auto.arima', 'adf.test')\n\n> ics_results <- sapply(ics, function(x) list(TP=0, TN=0, FP=0, FN=0, lag_right=0), simplify=F)",
        "\n\n> stmethods_results <- sapply(stationary_methods, function(x) list(TP=0, TN=0, FP=0, FN=0, lag_right=0), simplify=F)\n\n> generate_covariate <- function(parinfo) {\n+     stationary <- parinfo$stationary\n+     set.seed(parinfo$seed)    \n+     \n+     model_orders <- gener .... [TRUNCATED] \n\n> #' Primer caso. Utilizando errores estacionarios\n> \n> \n>     \n> # generate covariates and residuals\n> local_variables <- ls()\n\n> global_variables <- names(.GlobalEnv)\n\n> cl <- makeCluster(detectCores(logical=F))\n\n> clusterExport(cl, local_variables, env=environment())",
        "\n\n> clusterExport(cl, global_variables)\n\n> clusterEvalQ(cl, library(polynom))\n[[1]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[2]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[3]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[4]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     ",
        "\n\n[[5]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[6]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[7]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[8]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[9]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    ",
        " \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[10]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[11]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[12]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[13]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[14]]\n[1] \"polynom\"  ",
        " \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n\n> clusterEvalQ(cl, library(fpp2))\n[[1]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[2]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[3]]\n [1] \"expsmooth\" \"fma\"       \"forecast\" ",
        " \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[4]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[5]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[6]]\n [1] \"expsmooth\" \"fma\"       \"forecast\" ",
        " \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[7]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[8]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[9]]\n [1] \"expsmooth\" \"fma\"       \"forecast\" ",
        " \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[10]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[11]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[12]]\n [1] \"expsmooth\" \"fma\"       \"forecast\" ",
        " \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[13]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[14]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n\n> clusterEvalQ(cl, library(tseries))",
        "\n[[1]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[2]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[3]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    ",
        " \"datasets\"  \"methods\"   \"base\"     \n\n[[4]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[5]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[6]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"    ",
        " \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[7]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[8]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[9]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  ",
        " \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[10]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[11]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[12]]\n [1] \"tseries\"   \"expsmooth\"",
        " \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[13]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[14]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     ",
        "\n\n\n> clusterEvalQ(cl, library(TSA))\n[[1]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[2]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[3]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  ",
        " \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[4]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[5]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     ",
        "\n\n[[6]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[7]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[8]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"  ",
        " \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[9]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[10]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[11]]\n [1] \"TSA\"      ",
        " \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[12]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[13]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\" ",
        " \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[14]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n\n> clusterEvalQ(cl, library(seastests))\n[[1]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     ",
        "\n\n[[2]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[3]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[4]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" ",
        " \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[5]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[6]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    ",
        " \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[7]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[8]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[9]]\n [1] \"seastests\" \"TSA\"       \"tseries\"  ",
        " \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[10]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[11]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"    ",
        " \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[12]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[13]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[14]]\n",
        " [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n\n> clusterEvalQ(cl, library(forecast))\n[[1]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[2]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\"",
        " \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[3]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[4]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\" ",
        " \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[5]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[6]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[7]]\n [1] \"seastests\"",
        " \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[8]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[9]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"     ",
        " \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[10]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[11]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"  ",
        " \"base\"     \n\n[[12]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[13]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[14]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"      ",
        " \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n\n> clusterEvalQ(cl, library(stringr))\n[[1]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[2]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"  ",
        " \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[3]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[4]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\"",
        " \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[5]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[6]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[7]]\n",
        " [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[8]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[9]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\"",
        " \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[10]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[11]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"  ",
        " \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[12]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[13]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\" ",
        " \"methods\"   \"base\"     \n\n[[14]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n\n> covariates <- c('X1', 'X2', 'X3', 'X4', 'X5', 'X6', 'residuals')\n\n> covarinfo <- sapply(covariates, function(x) list(seed=sample(0:10000, 1), stationary=(x=='residuals')), simplify=F)\n\n> xregs <- parLapply(cl, covarinfo, generate_covariate)\n",
        "Error in checkForRemoteErrors(val) : \n  one node produced an error: $ operator is invalid for atomic vectors\n",
        "\nRestarting R session...\n\n",
        "> ",
        "source(\"~/dynamic-arimax/simulations.R\", echo=TRUE)",
        "\n> eval(parse(\"plot_tools.R\", encoding=\"UTF-8\"))\n",
        "Loading required package: ggplot2\n",
        "\nAttaching package: ‘plotly’\n\n",
        "The following object is masked from ‘package:ggplot2’:\n\n    last_plot\n\n",
        "The following object is masked from ‘package:stats’:\n\n    filter\n\n",
        "The following object is masked from ‘package:graphics’:\n\n    layout\n\n",
        "\n> eval(parse(\"arima_simulation.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"auto_fitting.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"auto_selection.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"forecasting.R\", encoding=\"UTF-8\"))\n\n> # Librerías de series temporales\n> library(fpp2)\n",
        "Registered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n",
        "\u001B[37m── \u001B[1mAttaching packages\u001B[22m ────────────────────────────────────────────────────── fpp2 2.4 ──\u001B[39m\n",
        "\u001B[37m\u001B[32m✔\u001B[37m \u001B[34mforecast \u001B[37m 8.17.0     \u001B[32m✔\u001B[37m \u001B[34mexpsmooth\u001B[37m 2.3   \n\u001B[32m✔\u001B[37m \u001B[34mfma      \u001B[37m 2.4        \u001B[39m\n",
        "\u001B[37m\u001B[39m\n",
        "\n> library(tseries)\n",
        "\n    ‘tseries’ version: 0.10-51\n\n    ‘tseries’ is a package for time series analysis and computational finance.\n\n    See ‘library(help=\"tseries\")’ for details.\n\n",
        "\n> library(TSA)\n",
        "Registered S3 methods overwritten by 'TSA':\n  method       from    \n  fitted.Arima forecast\n  plot.Arima   forecast\n",
        "\nAttaching package: ‘TSA’\n\n",
        "The following objects are masked from ‘package:stats’:\n\n    acf, arima\n\n",
        "The following object is masked from ‘package:utils’:\n\n    tar\n\n",
        "\n> library(seastests)\n\n> library(forecast)\n\n> # Librerías para los gráficos\n> library(plotly)\n\n> library(forecast)\n\n> # Auxiliares\n> library(prettydoc)\n\n> library(stringi)\n\n> library(stringr)\n\n> library(polynom)\n\n> library(parallel)\n\n> ics <- c('aicc')\n\n> n <- 5000\n\n> stationary_methods <- c('auto.arima', 'adf.test')\n\n> generate_orders <- function() {\n+     p <- sample(0:3, size=1, prob=c(0.3, 0.3, 0.2, 0.1))\n+     q <- sample(0:3, size=1, prob=c(0.3, 0.3, 0.2, 0.1) .... [TRUNCATED] \n\n> generate_coefficients <- function() {\n+     sign <- ifelse(runif(4)>0.3, 1, -1)\n+     betas <- sign*rnorm(4, 2, 0.5) \n+     betas[1] <- rnorm(1, 0, ",
        " .... [TRUNCATED] \n\n> generate_lags <- function() {\n+     lags <- sample(0:6, size=3, prob=c(0.3, 0.25, 0.25, 0.1, 0.05, 0.025, 0.025))\n+     return(lags)\n+ }\n\n> check_covariate <- function(covariate) {\n+     if (ncol(ajuste$xreg) == 1) {\n+         return(covariate %in% ajuste$history$var)\n+     } else {\n+    .... [TRUNCATED] \n\n> check_lag <- function(covariate, correct_lag) {\n+     return(as.numeric(\n+         correct_lag == as.numeric(ajuste$history$lag[ajuste$history$var = .... [TRUNCATED] \n\n> TP <- 0\n\n> TN <- 0",
        "\n\n> FP <- 0\n\n> FN <- 0\n\n> lag_right <- 0\n\n> ics <- c('aic', 'bic', 'aicc')\n\n> stationary_methods <- c('auto.arima', 'adf.test')\n\n> ics_results <- sapply(ics, function(x) list(TP=0, TN=0, FP=0, FN=0, lag_right=0), simplify=F)\n\n> stmethods_results <- sapply(stationary_methods, function(x) list(TP=0, TN=0, FP=0, FN=0, lag_right=0), simplify=F)\n\n> generate_covariate <- function(parinfo) {\n+     stationary <- parinfo$stationary\n+     set.seed(parinfo$seed)    \n+     \n+     model_orders <- gener .... [TRUNCATED] ",
        "\n\n> #' Primer caso. Utilizando errores estacionarios\n> \n> \n>     \n> # generate covariates and residuals\n> local_variables <- ls()\n\n> global_variables <- names(.GlobalEnv)\n\n> cl <- makeCluster(detectCores(logical=F))\n\n> clusterExport(cl, local_variables, env=environment())\n\n> clusterExport(cl, global_variables)\n\n> clusterEvalQ(cl, library(polynom))\n[[1]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[2]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\"",
        " \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[3]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[4]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[5]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[6]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[7]]\n[1] \"polynom\"  ",
        " \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[8]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[9]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[10]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[11]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  ",
        "\n[8] \"base\"     \n\n[[12]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[13]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n[[14]]\n[1] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[8] \"base\"     \n\n\n> clusterEvalQ(cl, library(fpp2))\n[[1]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\"",
        " \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[2]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[3]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[4]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\"",
        " \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[5]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[6]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[7]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\"",
        " \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[8]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[9]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[10]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\"",
        " \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[11]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[12]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[13]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\"",
        " \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[14]]\n [1] \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"    \n [8] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n\n> clusterEvalQ(cl, library(tseries))\n[[1]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[2]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  ",
        " \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[3]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[4]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[5]]\n [1] \"tseries\"   \"expsmooth\"",
        " \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[6]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[7]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     ",
        "\n\n[[8]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[9]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[10]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    ",
        " \"datasets\"  \"methods\"   \"base\"     \n\n[[11]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[12]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[13]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"    ",
        " \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[14]]\n [1] \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"      \"polynom\"  \n [8] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n\n> clusterEvalQ(cl, library(TSA))\n[[1]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[2]]\n [1] \"TSA\"      ",
        " \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[3]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[4]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\" ",
        " \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[5]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[6]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[7]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\"",
        " \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[8]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[9]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    ",
        " \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[10]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[11]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[12]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" ",
        " \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[13]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[15] \"base\"     \n\n[[14]]\n [1] \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"   \"fpp2\"     \n [8] \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  ",
        "\n[15] \"base\"     \n\n\n> clusterEvalQ(cl, library(seastests))\n[[1]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[2]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[3]]\n [1] \"seastests\" \"TSA\"      ",
        " \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[4]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[5]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"  ",
        " \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[6]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[7]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     ",
        "\n\n[[8]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[9]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[10]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" ",
        " \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[11]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[12]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    ",
        " \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[13]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[14]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n\n> clusterEvalQ(cl, library(forecast))\n",
        "[[1]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[2]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[3]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  ",
        "\n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[4]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[5]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" ",
        "\n[15] \"methods\"   \"base\"     \n\n[[6]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[7]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[8]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\"",
        " \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[9]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[10]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\" ",
        " \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[11]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[12]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[13]]\n [1] \"seastests\"",
        " \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n[[14]]\n [1] \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\"  \"ggplot2\"  \n [8] \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[15] \"methods\"   \"base\"     \n\n\n> clusterEvalQ(cl, library(stringr))\n[[1]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\"",
        " \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[2]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[3]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"  ",
        " \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[4]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[5]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\" ",
        " \"methods\"   \"base\"     \n\n[[6]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[7]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[8]]\n [1] \"stringr\"   \"seastests\"",
        " \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[9]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[10]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" ",
        "\n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[11]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[12]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\" ",
        " \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[13]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     \n\n[[14]]\n [1] \"stringr\"   \"seastests\" \"TSA\"       \"tseries\"   \"expsmooth\" \"fma\"       \"forecast\" \n [8] \"ggplot2\"   \"fpp2\"      \"polynom\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\"     ",
        "\n\n\n> covariates <- c('X1', 'X2', 'X3', 'X4', 'X5', 'X6', 'residuals')\n\n> covarinfo <- sapply(covariates, function(x) list(seed=sample(0:10000, 1), stationary=(x=='residuals')), simplify=F)\n\n> xregs <- parLapply(cl, covarinfo, generate_covariate)\n\n> stopCluster(cl)\n\n> X1 <- xregs[['X1']]; X2 <- xregs[['X2']]; X3 <- xregs[['X3']]    \n\n> X4 <- xregs[['X4']]; X5 <- xregs[['X5']]; X6 <- xregs[['X6']]    \n\n> residuals <- xregs[['residuals']]\n\n> # generate coefficients and lags\n> betas <- generate_coefficients()\n\n",
        "> lags <- as.list(setNames(generate_lags(), c('X1', 'X2', 'X3')))\n\n> beta0 <- betas[1]; beta1 <- betas[2]; beta2 <- betas[3]; beta3 <- betas[4]\n\n> lag1 <- lags[['X1']]; lag2 <- lags[['X2']]; lag3 <- lags[['X3']]\n\n> # construct the dependent variable\n> Y <- beta0 + beta1 * lag(X1, -lag1) + beta2 * lag(X2, -lag2) + beta3 * lag(X3, -lag3) + residuals\n\n> xregs <- cbind(X1, X2, X3, X4, X5, X6)\n\n> # launch the selection method\n> update_result <- function(ic, statmet, metric, value=1) {\n+     ics_results[[ic]][[metric]] <- ics_results[[ic]][[me",
        " .... [TRUNCATED] \n\n> for (ic in ics) {\n+     for (statmet in stationary_methods) {\n+   \n+         ajuste <- auto.fit.arima.regression(Y, xregs, ic=ic, stationary_method= .... [TRUNCATED] \nCovariate X1 was added to the model\nCovariate X2 was added to the model\nCovariate X3 was added to the model\nCovariate X4 was not added to the model\nCovariate X5 was not added to the model\nCovariate X6 was not added to the model\nCovariate X1 was added to the model\nCovariate X2 was added to the model\nCovariate X3 was added to the model\n",
        "Covariate X4 was not added to the model\nCovariate X5 was not added to the model\nCovariate X6 was not added to the model\nCovariate X1 was added to the model\nCovariate X2 was added to the model\nCovariate X3 was added to the model\nCovariate X4 was not added to the model\nCovariate X5 was not added to the model\nCovariate X6 was not added to the model\nCovariate X1 was added to the model\nCovariate X2 was added to the model\nCovariate X3 was added to the model\nCovariate X4 was not added to the model\nCovariate X5 was not added to the model\n",
        "Covariate X6 was not added to the model\nCovariate X1 was added to the model\nCovariate X2 was added to the model\nCovariate X3 was added to the model\nCovariate X4 was not added to the model\nCovariate X5 was not added to the model\nCovariate X6 was not added to the model\nCovariate X1 was added to the model\nCovariate X2 was added to the model\nCovariate X3 was added to the model\nCovariate X4 was not added to the model\nCovariate X5 was not added to the model\nCovariate X6 was not added to the model\n",
        "> ",
        "ics_results",
        "$aic\n$aic$TP\n[1] 6\n\n$aic$TN\n[1] 6\n\n$aic$FP\n[1] 0\n\n$aic$FN\n[1] 0\n\n$aic$lag_right\n[1] 2\n\n\n$bic\n$bic$TP\n[1] 6\n\n$bic$TN\n[1] 6\n\n$bic$FP\n[1] 0\n\n$bic$FN\n[1] 0\n\n$bic$lag_right\n[1] 2\n\n\n$aicc\n$aicc$TP\n[1] 6\n\n$aicc$TN\n[1] 6\n\n$aicc$FP\n[1] 0\n\n$aicc$FN\n[1] 0\n\n$aicc$lag_right\n[1] 2\n\n\n",
        "> ",
        "is_valid(NULL)",
        "[1] FALSE\n",
        "> ",
        "source(\"~/dynamic-arimax/simulations.R\", echo=TRUE)",
        "\n> eval(parse(\"plot_tools.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"arima_simulation.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"auto_fitting.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"auto_selection.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"forecasting.R\", encoding=\"UTF-8\"))\n\n> # Librerías de series temporales\n> library(fpp2)\n\n> library(tseries)\n\n> library(TSA)\n\n> library(seastests)\n\n> library(forecast)\n\n> # Librerías para los gráficos\n> library(plotly)\n\n> library(forecast)\n\n> # Auxiliares\n> library(prettydoc)\n\n> library(stringi)",
        "\n\n> library(stringr)\n\n> library(polynom)\n\n> library(parallel)\n\n> ics <- c('aicc')\n\n> n <- 5000\n\n> m <- 100\n\n> stationary_methods <- c('auto.arima', 'adf.test')\n\n> generate_orders <- function() {\n+     p <- sample(0:3, size=1, prob=c(0.3, 0.3, 0.2, 0.1))\n+     q <- sample(0:3, size=1, prob=c(0.3, 0.3, 0.2, 0.1) .... [TRUNCATED] \n\n> generate_coefficients <- function() {\n+     sign <- ifelse(runif(4)>0.3, 1, -1)\n+     betas <- sign*rnorm(4, 2, 0.5) \n+     betas[1] <- rnorm(1, 0,  .... [TRUNCATED] \n\n> generate_lags <- function() {\n+     lags <- sample(0:6, size=3, prob=c(0.3, 0.25, 0.25, 0.1, 0.05, 0.025, 0.025))\n+     return(lags)\n+ }",
        "\n\n> check_covariate <- function(covariate) {\n+     if (ncol(ajuste$xreg) == 1) {\n+         return(covariate %in% ajuste$history$var)\n+     } else {\n+    .... [TRUNCATED] \n\n> check_lag <- function(covariate, correct_lag) {\n+     return(as.numeric(\n+         correct_lag == as.numeric(ajuste$history$lag[ajuste$history$var = .... [TRUNCATED] \n\n> TP <- 0\n\n> TN <- 0\n\n> FP <- 0\n\n> FN <- 0\n\n> lag_right <- 0\n\n> ics <- c('aic', 'bic', 'aicc')\n\n> stationary_methods <- c('auto.arima', 'adf.test')\n\n> ics_results <- sapply(ics, function(x) list(TP=0, TN=0, FP=0, FN=0, lag_right=0), simplify=F)",
        "\n\n> stmethods_results <- sapply(stationary_methods, function(x) list(TP=0, TN=0, FP=0, FN=0, lag_right=0), simplify=F)\n\n> generate_covariate <- function(parinfo) {\n+     stationary <- parinfo$stationary\n+     set.seed(parinfo$seed)    \n+     \n+     model_orders <- gener .... [TRUNCATED] \n\n> update_result <- function(ic, statmet, metric, value=1) {\n+     ics_results[[ic]][[metric]] <- ics_results[[ic]][[metric]] + value\n+     print(ics_r .... [TRUNCATED] \n\n> #' Primer caso. Utilizando errores estacionarios\n> for (i in 1:m) {\n+     cat(paste0('Ejecutando la simulación ', i, '/', m))\n+     \n+     \n+     # ",
        " .... [TRUNCATED] \nEjecutando la simulación 1/100",
        "Error in checkForRemoteErrors(val) : \n  one node produced an error: $ operator is invalid for atomic vectors\n",
        "> ",
        "source(\"~/dynamic-arimax/simulations.R\", echo=TRUE)",
        "\n> eval(parse(\"plot_tools.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"arima_simulation.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"auto_fitting.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"auto_selection.R\", encoding=\"UTF-8\"))\n\n> eval(parse(\"forecasting.R\", encoding=\"UTF-8\"))\n\n> # Librerías de series temporales\n> library(fpp2)\n\n> library(tseries)\n\n> library(TSA)\n\n> library(seastests)\n\n> library(forecast)\n\n> # Librerías para los gráficos\n> library(plotly)\n\n> library(forecast)\n\n> # Auxiliares\n> library(prettydoc)\n\n> library(stringi)",
        "\n\n> library(stringr)\n\n> library(polynom)\n\n> library(parallel)\n\n> ics <- c('aicc')\n\n> n <- 5000\n\n> m <- 100\n\n> stationary_methods <- c('auto.arima', 'adf.test')\n\n> generate_orders <- function() {\n+     p <- sample(0:3, size=1, prob=c(0.3, 0.3, 0.2, 0.1))\n+     q <- sample(0:3, size=1, prob=c(0.3, 0.3, 0.2, 0.1) .... [TRUNCATED] \n\n> generate_coefficients <- function() {\n+     sign <- ifelse(runif(4)>0.3, 1, -1)\n+     betas <- sign*rnorm(4, 2, 0.5) \n+     betas[1] <- rnorm(1, 0,  .... [TRUNCATED] \n\n> generate_lags <- function() {\n+     lags <- sample(0:6, size=3, prob=c(0.3, 0.25, 0.25, 0.1, 0.05, 0.025, 0.025))\n+     return(lags)\n+ }",
        "\n\n> check_covariate <- function(covariate) {\n+     if (ncol(ajuste$xreg) == 1) {\n+         return(covariate %in% ajuste$history$var)\n+     } else {\n+    .... [TRUNCATED] \n\n> check_lag <- function(covariate, correct_lag) {\n+     return(as.numeric(\n+         correct_lag == as.numeric(ajuste$history$lag[ajuste$history$var = .... [TRUNCATED] \n\n> TP <- 0\n\n> TN <- 0\n\n> FP <- 0\n\n> FN <- 0\n\n> lag_right <- 0\n\n> ics <- c('aic', 'bic', 'aicc')\n\n> stationary_methods <- c('auto.arima', 'adf.test')\n\n> ics_results <- sapply(ics, function(x) list(TP=0, TN=0, FP=0, FN=0, lag_right=0), simplify=F)",
        "\n\n> stmethods_results <- sapply(stationary_methods, function(x) list(TP=0, TN=0, FP=0, FN=0, lag_right=0), simplify=F)\n\n> generate_covariate <- function(parinfo) {\n+     stationary <- parinfo$stationary\n+     set.seed(parinfo$seed)    \n+     \n+     model_orders <- gener .... [TRUNCATED] \n\n> update_result <- function(ic, statmet, metric, value=1) {\n+     ics_results[[ic]][[metric]] <- ics_results[[ic]][[metric]] + value\n+     print(ics_r .... [TRUNCATED] \n\n> #' Primer caso. Utilizando errores estacionarios\n> for (i in 1:m) {\n+     cat(paste0('Ejecutando la simulación ', i, '/', m))\n+     \n+     \n+     # ",
        " .... [TRUNCATED] \nEjecutando la simulación 1/100\nRestarting R session...\n\n"
    ]
}