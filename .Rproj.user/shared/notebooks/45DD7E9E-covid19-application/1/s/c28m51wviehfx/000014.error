{"frames":[{"func":"drm.select(sarscov2, xregs, ic = \"aicc\", alpha = 0.05, st_method = \"auto.arima\", \n    show_info = T)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"get.max.lag()","file":"auto-select.R","line_number":184,"end_line_number":184,"character_number":5,"end_character_number":28},{"func":"parLapply(cl, as.list(1:ncol(xregs)), function(x) get.opt.lag(xregs[, \n    x], response, alpha, NA, st_method, F))","file":"auto-select.R","line_number":75,"end_line_number":79,"character_number":9,"end_character_number":9},{"func":"do.call(c, clusterApply(cl = cl, x = splitList(X, nchunks), fun = lapply, \n    FUN = fun, ...), quote = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"clusterApply(cl = cl, x = splitList(X, nchunks), fun = lapply, \n    FUN = fun, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"staticClusterApply(cl, fun, length(x), argfun)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"sendCall(cl[[i]], fun, argfun(start + i - 1L))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"postNode(con, \"EXEC\", list(fun = fun, args = args, return = return, \n    tag = tag))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"sendData(con, list(type = type, data = value, tag = tag))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"sendData.SOCKnode(con, list(type = type, data = value, tag = tag))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"serialize(data, node$con)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"no loop for break/next, jumping to top level"}