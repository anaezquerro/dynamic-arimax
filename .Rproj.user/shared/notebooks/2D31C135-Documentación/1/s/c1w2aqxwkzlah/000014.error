{"frames":[{"func":"drm.select(Y, X)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"get.max.lag()","file":"auto-select.R","line_number":184,"end_line_number":184,"character_number":5,"end_character_number":28},{"func":"parLapply(cl, as.list(1:ncol(xregs)), function(x) get.opt.lag(xregs[, \n    x], response, alpha, st_method, F))","file":"auto-select.R","line_number":75,"end_line_number":79,"character_number":9,"end_character_number":9},{"func":"do.call(c, clusterApply(cl = cl, x = splitList(X, nchunks), fun = lapply, \n    FUN = fun, ...), quote = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"clusterApply(cl = cl, x = splitList(X, nchunks), fun = lapply, \n    FUN = fun, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"staticClusterApply(cl, fun, length(x), argfun)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"checkForRemoteErrors(val)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(\"one node produced an error: \", firstmsg, domain = NA)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in checkForRemoteErrors(val) : \n  one node produced an error: [ArgumentError] `method`  must be \"auto.arima\" or \"adf.test\"\n"}