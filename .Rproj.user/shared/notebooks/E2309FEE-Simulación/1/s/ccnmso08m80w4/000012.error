{"frames":[{"func":"auto.fit.arima.regression(Y, regresoras, show_info = T)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"parLapply(cl, xregs_list, fit.simple.regression)","file":"auto_selection.R","line_number":161,"end_line_number":161,"character_number":9,"end_character_number":67},{"func":"do.call(c, clusterApply(cl = cl, x = splitList(X, nchunks), fun = lapply, \n    FUN = fun, ...), quote = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"clusterApply(cl = cl, x = splitList(X, nchunks), fun = lapply, \n    FUN = fun, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"staticClusterApply(cl, fun, length(x), argfun)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(cl[1:jobs], recvResult)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"recvData(con)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"recvData.SOCKnode(con)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"unserialize(node$con)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"unused argument (seasonal = seasonal)"}